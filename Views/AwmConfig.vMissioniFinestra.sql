SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE VIEW [AwmConfig].[vMissioniFinestra]
AS
WITH	Hours
AS
(
	SELECT 0 as [Hour] UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 UNION SELECT 12 UNION SELECT 13 UNION SELECT 14 UNION SELECT 15 UNION SELECT 16 UNION SELECT 17 UNION SELECT 18 UNION SELECT 19 UNION SELECT 20 UNION SELECT 21 UNION SELECT 22 UNION SELECT 23
),
		Windows AS
(
	SELECT 0 as [Window] UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 UNION SELECT 11 
),	Minute_Windows	AS
(
	SELECT Windows.Window, Windows.Window * 5 AS From_Min, Windows.Window * 5+5 AS To_Min FROM Windows
),	Missioni_Completate		AS
(
	SELECT	MS.Data_Storicizzazione AS Data, MS.Id_Missione,  PD.ID_TIPO_PARTIZIONE 
	FROM	dbo.Missioni_Storico		MS
	JOIN	dbo.Partizioni				PD
	ON		PD.ID_PARTIZIONE = MS.Id_Partizione_Destinazione
	WHERE	MS.Stato_Missione = 'TOK' 
		AND 
		(
			PD.ID_TIPO_PARTIZIONE IN ('MA','PK','US')
		)
		AND MS.Id_Udc IS NOT NULL
),	Event_Horizon	AS
(	
	SELECT	DATEADD(MINUTE, -1 * DATEPART(MINUTE,CAST(GETDATE() AS smalldatetime)) % 5, CAST(GETDATE() AS smalldatetime))   AS t
),	Sliding_Windows AS
(
	SELECT	DATEADD(HOUR, -1 * H.Hour, DATEADD(MINUTE, - 30 -1 * MW.From_Min ,EH.t))		AS From_Time,
			DATEADD(HOUR, -1 * H.Hour, DATEADD(MINUTE,  -1 * MW.From_Min,EH.t))			AS To_Time
	FROM	Event_Horizon	EH
	JOIN	Minute_Windows	MW
	ON		1 = 1
	JOIN	Hours			H
	ON		1 = 1
	--ORDER BY From_Time
)
SELECT	SW.From_Time,
		SW.To_Time,
		COUNT(MC.Id_Missione) AS Mission_Count,
		SUM(CASE WHEN MC.ID_TIPO_PARTIZIONE ='MA' THEN 1 ELSE 0 END) AS Inbound_Count,		
		SUM(CASE WHEN MC.ID_TIPO_PARTIZIONE ='PK' OR MC.ID_TIPO_PARTIZIONE ='US' THEN 1 ELSE 0 END) AS Outbound_Count
FROM	Sliding_Windows		SW
LEFT	
JOIN	Missioni_Completate	MC
ON		MC.Data >= SW.From_Time
AND		MC.Data <= SW.To_Time
GROUP
BY		SW.From_Time,
		SW.To_Time
--ORDER BY SW.From_Time
GO
