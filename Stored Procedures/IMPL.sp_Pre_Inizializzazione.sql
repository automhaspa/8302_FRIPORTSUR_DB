SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE PROC [IMPL].[sp_Pre_Inizializzazione]
AS
BEGIN
	-- cancellazione UDC che creano overflow di capienza
	DECLARE @ID_PARTIZIONE INT

	DECLARE CURSORE_PARTIZIONI CURSOR LOCAL FAST_FORWARD FOR
		SELECT	P.ID_PARTIZIONE
		FROM	dbo.Partizioni		P
		JOIN	dbo.Udc_Posizione	UP
		ON		UP.Id_Partizione = P.ID_PARTIZIONE
		GROUP
			BY	P.ID_PARTIZIONE,
				P.CAPIENZA
		HAVING	COUNT(UP.Id_Udc) > P.CAPIENZA

	OPEN CURSORE_PARTIZIONI
	FETCH NEXT FROM CURSORE_PARTIZIONI INTO
		@ID_PARTIZIONE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		DECLARE @ID_UDC INT
		DECLARE CURSORE_UDC CURSOR LOCAL FAST_FORWARD FOR
			SELECT	UT.Id_Udc
			FROM	dbo.Udc_Posizione	UP
			JOIN	dbo.Udc_Testata		UT
			ON		UT.Id_Udc = UP.Id_Udc
				AND UT.Id_Tipo_Udc = 'N'
			WHERE	Id_Partizione =	@ID_PARTIZIONE
		
		OPEN CURSORE_UDC
		FETCH NEXT FROM CURSORE_UDC INTO
			@ID_UDC

		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF EXISTS
			(
				SELECT	P.ID_PARTIZIONE
				FROM	dbo.Partizioni		P
				JOIN	dbo.Udc_Posizione	UP
				ON		UP.Id_Partizione = P.ID_PARTIZIONE
				WHERE	P.ID_PARTIZIONE = @ID_PARTIZIONE
				GROUP
					BY	P.ID_PARTIZIONE,
						P.CAPIENZA
				HAVING	COUNT(UP.Id_Udc) > P.CAPIENZA
			)

			DELETE dbo.Percorso WHERE Id_Missione IN (SELECT Id_Missione FROM dbo.Missioni WHERE Id_Udc = @ID_UDC)
			DELETE dbo.Missioni WHERE Id_Udc = @ID_UDC

			DELETE dbo.Liste_Associazioni	WHERE Id_Udc = @ID_UDC

			DELETE dbo.Udc_Dettaglio		WHERE Id_Udc = @ID_UDC
			DELETE dbo.Udc_Posizione		WHERE Id_Udc = @ID_UDC
			DELETE dbo.Udc_Testata			WHERE Id_Udc = @ID_UDC

			FETCH NEXT FROM CURSORE_UDC INTO
				@ID_UDC
		END
		
		CLOSE CURSORE_UDC
		DEALLOCATE CURSORE_UDC

		FETCH NEXT FROM CURSORE_PARTIZIONI INTO
			@ID_PARTIZIONE
	END

	CLOSE CURSORE_PARTIZIONI
	DEALLOCATE CURSORE_PARTIZIONI


	-- Reset Passi di missioni gruppate in stato 2 o 9
	DECLARE @ID_MISSIONE INT

	DECLARE CURSORE_MISSIONI CURSOR LOCAL FAST_FORWARD FOR
		SELECT	M.Id_Missione
		FROM	dbo.Missioni		M
		JOIN	dbo.Percorso		P
		ON		P.Id_Missione = M.Id_Missione
			AND M.Id_Raggruppa_Udc IS NOT NULL
			AND P.Id_Tipo_Stato_Percorso IN (2,9)

	OPEN CURSORE_MISSIONI
	FETCH NEXT FROM CURSORE_MISSIONI INTO
		@ID_MISSIONE

	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE	dbo.Percorso
		SET		Id_Tipo_Stato_Percorso = 1
		WHERE	Id_Missione = @ID_MISSIONE
			AND	Id_Tipo_Stato_Percorso IN (2,9)

		FETCH NEXT FROM CURSORE_MISSIONI INTO
			@ID_MISSIONE	    
	END

	CLOSE CURSORE_MISSIONI
	DEALLOCATE CURSORE_MISSIONI
END

GO
